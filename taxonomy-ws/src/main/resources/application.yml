spring.profiles.active: queryBased,local

spring:
 data:
  mongodb:
   host: localhost
   port: 27017
   database: taxonomy

  mongo:
   repositories:
    enabled: true

mongo.categories:
 port: 27017
 database: taxonomy

async:
 fsSearch:
  threadPoolSize: 3
  queueCapacity: 200
 memorySearch:
  threadPoolSize: 2
  queueCapacity: 200

lucene:
 mlt:
  fieldsToAnalyse: DESCRIPTION,TITLE,CONTEXTDESCRIPTION,CORPBODYS,SUBJECTS,PERSON_FULLNAME,PLACE_NAME,CATDOCREF
  mimimumScoreForMlt: 0
  mimimumGlobalScoreForACategory: 0
  maximumSimilarElements: 2000
  minTermFreq: 1
  minDocFreq: 2
  titleBoostingFactor: 0.25
  descBoostingFactor: 2
  contextDescBoostingFactor: 0.75

 index:
  version: LUCENE_4_10_3
  maxTrainingDocsPerCategory: 5000
  maxShingleSize: 0
  useStopFilter: false
  useSynonymFilter: true
  queryFilterSourceValues: 100,200
  iaViewMaxMergeSizeMB: 5.0
  iaViewMaxCachedMB: 60.0
  defaultTaxonomyField: textnocasnopunc

logging.config: classpath:log4j2-conf.json


#################################
#      ENVIRONMENT RELATED      #
#################################

mongo.categories.host: ${taxonomy.ws.application.yml.mongo.categories.host}

lucene.index:
 iaviewCollectionPath: ${taxonomy.ws.application.yml.lucene.index.iaviewcollectionpath} 
 trainingSetCollectionPath: ${taxonomy.ws.application.yml.lucene.index.trainingsetcollectionpath}
  
server.port: ${taxonomy.ws.application.yml.server.port}


#################################
#       SPECIFIC PROFILES       #
#################################  

---
spring.profiles: queryBased
lucene:
 categoriser:
  useTSetBasedCategoriser: false
  useQueryBasedCategoriser: true
  
---
spring.profiles: tsetBased
lucene:
 categoriser:
  useTSetBasedCategoriser: true
  useQueryBasedCategoriser: false

---
spring.profiles: local

# fake profile for development purpose only
#
# either set in your IDE environment variables for the application Env related variables using that convention:
# 		TAXONOMY_APPLICATION_KEY=value 
# 		(replace dots from vars here by underscores and make it upper case)
# 	OR create a file application-local.yml locally with those env related variables filled with proper values
#
# Do the same for logging configuration
# 	If you chose the 2nd solution, add this in your yml file: "logging.config: classpath:log4j2-local.json"